[{"/home/ubuntu/Downloads/temp/luckysheet-react/src/index.tsx":"1","/home/ubuntu/Downloads/temp/luckysheet-react/src/serviceWorker.js":"2","/home/ubuntu/Downloads/temp/luckysheet-react/src/App.tsx":"3","/home/ubuntu/Downloads/temp/luckysheet-react/src/component/Luckysheet.js":"4","/home/ubuntu/Downloads/temp/luckysheet-react/src/component/ActionMenu.tsx":"5"},{"size":462,"mtime":1610083538573,"results":"6","hashOfConfig":"7"},{"size":5086,"mtime":1609990881076,"results":"8","hashOfConfig":"7"},{"size":1528,"mtime":1610362383779,"results":"9","hashOfConfig":"7"},{"size":3679,"mtime":1610362375215,"results":"10","hashOfConfig":"7"},{"size":3822,"mtime":1610370391634,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"wbffcv",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/home/ubuntu/Downloads/temp/luckysheet-react/src/index.tsx",[],["25","26"],"/home/ubuntu/Downloads/temp/luckysheet-react/src/serviceWorker.js",[],["27","28"],"/home/ubuntu/Downloads/temp/luckysheet-react/src/App.tsx",[],"/home/ubuntu/Downloads/temp/luckysheet-react/src/component/Luckysheet.js",[],"/home/ubuntu/Downloads/temp/luckysheet-react/src/component/ActionMenu.tsx",["29","30"],"import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton,\n    MenuDivider\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nimport '../styles/actionmenu.css';\n\nimport { FiSettings } from 'react-icons/fi';\n\n// import * as mqtt from 'paho-mqtt';\n\nimport AES from 'crypto-js/aes';\nimport SHA256 from 'crypto-js/sha256';\nimport random from 'crypto-js/lib-typedarrays'\nimport Utf8 from 'crypto-js/enc-utf8';\n\nimport * as mqtt from 'mqtt'\n\ninterface IProps {\n    editMode: boolean;\n    setEditMode: Function;\n    saveData: Function;\n    getData: Function;\n}\n\nexport class ActionMenu extends React.Component<IProps> {\n    private broker: string = \"wss://test.mosquitto.org:8081\";\n\n    constructor(props: IProps) {\n        super(props);\n    }\n\n    private createKey() {\n        const seed = random.random(16);\n        const sha256 = SHA256(seed).toString();\n        const key = sha256.slice(0, 9)\n        return key;\n    }\n\n    handleHeaderClick() {\n        if (this.props.editMode) {\n            this.props.setEditMode(false);\n        }\n        else {\n            this.props.setEditMode(true);\n        }\n    }\n\n    handleUploadClick() {\n        const client  = mqtt.connect(this.broker)\n\n        client.on('connect', () => {\n            const key = this.createKey();\n            const channel = key + \"-channel\";\n\n            const dataString = JSON.stringify(this.props.getData());\n\n            const message = AES.encrypt(dataString, key);\n\n            client.publish(channel, message.toString(), {retain: true});\n\n            const keyFormatted = key.substr(0,3) + '-' + key.substr(3, 3) + \"-\" + key.substr(6, 3);\n            alert(`Uploaded workbook. The key is ${keyFormatted}`);\n\n            client.end();\n        });\n    }\n\n    handleDownloadClick() {\n        const keyPrompt: string = prompt(\"Please enter the 9 character key:\") as string;\n        const key = keyPrompt.replaceAll(\"-\", \"\");\n        const channel = key + \"-channel\";\n\n        const client  = mqtt.connect(this.broker)\n\n        client.on('connect', () => {\n            client.subscribe(channel, function (err) {\n                if (err) {\n                    alert(\"Unable to connect to MQTT channel\");\n                    console.error(err);\n                    return;\n                }\n            })\n        })\n\n        client.on('message', (topic, message) => {\n            console.log(message.toString())\n\n            try {\n                const data = AES.decrypt(message.toString(), key);\n                const json = JSON.parse(data.toString(Utf8));\n\n                // Delete retained message\n                client.publish(channel, \"\", {retain: true});\n\n                this.props.saveData(json, true);\n\n            } catch (error) {\n                alert(\"Invalid key provided, please try again.\");\n            }\n\n            client.end();\n        })\n    }\n\n    handlRefreshClick() {\n        eval('luckysheet.refreshFormula()');\n    }\n\n    handleDeleteClick() {\n        localStorage.clear();\n        this.props.saveData(null, true);\n    }\n    \n    render() {\n        const headerTitle = this.props.editMode ? \"Live Mode\" : \"Edit Mode\";\n        return (\n            <Menu menuButton={<MenuButton><FiSettings /></MenuButton>}>\n                <MenuItem onClick={() => {this.handleHeaderClick()}}>{headerTitle}</MenuItem>\n                <MenuDivider />\n                <MenuItem onClick={() => {this.handleUploadClick()}}>Upload</MenuItem>\n                <MenuItem onClick={() => {this.handleDownloadClick()}}>Download</MenuItem>\n                <MenuItem onClick={() => {this.handlRefreshClick()}}>Refresh</MenuItem>\n                <MenuDivider />\n                <MenuItem styles={{color: \"red\"}} onClick={() => {this.handleDeleteClick()}}>Delete data</MenuItem>\n            </Menu>\n        )\n    }\n}",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":33,"column":5,"nodeType":"37","messageId":"38","endLine":35,"endColumn":6},{"ruleId":"39","severity":1,"message":"40","line":111,"column":9,"nodeType":"41","messageId":"42","endLine":111,"endColumn":13},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-eval","eval can be harmful.","CallExpression","unexpected","no-global-assign","no-unsafe-negation"]